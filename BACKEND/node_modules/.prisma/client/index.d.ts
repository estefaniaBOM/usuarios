
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model escolaridad
 * 
 */
export type escolaridad = $Result.DefaultSelection<Prisma.$escolaridadPayload>
/**
 * Model habilidades
 * 
 */
export type habilidades = $Result.DefaultSelection<Prisma.$habilidadesPayload>
/**
 * Model usuario_habilidades
 * 
 */
export type usuario_habilidades = $Result.DefaultSelection<Prisma.$usuario_habilidadesPayload>
/**
 * Model usuarios
 * 
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Escolaridads
 * const escolaridads = await prisma.escolaridad.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Escolaridads
   * const escolaridads = await prisma.escolaridad.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.escolaridad`: Exposes CRUD operations for the **escolaridad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Escolaridads
    * const escolaridads = await prisma.escolaridad.findMany()
    * ```
    */
  get escolaridad(): Prisma.escolaridadDelegate<ExtArgs>;

  /**
   * `prisma.habilidades`: Exposes CRUD operations for the **habilidades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Habilidades
    * const habilidades = await prisma.habilidades.findMany()
    * ```
    */
  get habilidades(): Prisma.habilidadesDelegate<ExtArgs>;

  /**
   * `prisma.usuario_habilidades`: Exposes CRUD operations for the **usuario_habilidades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuario_habilidades
    * const usuario_habilidades = await prisma.usuario_habilidades.findMany()
    * ```
    */
  get usuario_habilidades(): Prisma.usuario_habilidadesDelegate<ExtArgs>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.11.0
   * Query Engine version: efd2449663b3d73d637ea1fd226bafbcf45b3102
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    escolaridad: 'escolaridad',
    habilidades: 'habilidades',
    usuario_habilidades: 'usuario_habilidades',
    usuarios: 'usuarios'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'escolaridad' | 'habilidades' | 'usuario_habilidades' | 'usuarios'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      escolaridad: {
        payload: Prisma.$escolaridadPayload<ExtArgs>
        fields: Prisma.escolaridadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.escolaridadFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.escolaridadFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload>
          }
          findFirst: {
            args: Prisma.escolaridadFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.escolaridadFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload>
          }
          findMany: {
            args: Prisma.escolaridadFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload>[]
          }
          create: {
            args: Prisma.escolaridadCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload>
          }
          createMany: {
            args: Prisma.escolaridadCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.escolaridadDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload>
          }
          update: {
            args: Prisma.escolaridadUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload>
          }
          deleteMany: {
            args: Prisma.escolaridadDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.escolaridadUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.escolaridadUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$escolaridadPayload>
          }
          aggregate: {
            args: Prisma.EscolaridadAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEscolaridad>
          }
          groupBy: {
            args: Prisma.escolaridadGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EscolaridadGroupByOutputType>[]
          }
          count: {
            args: Prisma.escolaridadCountArgs<ExtArgs>,
            result: $Utils.Optional<EscolaridadCountAggregateOutputType> | number
          }
        }
      }
      habilidades: {
        payload: Prisma.$habilidadesPayload<ExtArgs>
        fields: Prisma.habilidadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.habilidadesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.habilidadesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          findFirst: {
            args: Prisma.habilidadesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.habilidadesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          findMany: {
            args: Prisma.habilidadesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>[]
          }
          create: {
            args: Prisma.habilidadesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          createMany: {
            args: Prisma.habilidadesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.habilidadesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          update: {
            args: Prisma.habilidadesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          deleteMany: {
            args: Prisma.habilidadesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.habilidadesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.habilidadesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$habilidadesPayload>
          }
          aggregate: {
            args: Prisma.HabilidadesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHabilidades>
          }
          groupBy: {
            args: Prisma.habilidadesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HabilidadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.habilidadesCountArgs<ExtArgs>,
            result: $Utils.Optional<HabilidadesCountAggregateOutputType> | number
          }
        }
      }
      usuario_habilidades: {
        payload: Prisma.$usuario_habilidadesPayload<ExtArgs>
        fields: Prisma.usuario_habilidadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuario_habilidadesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuario_habilidadesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload>
          }
          findFirst: {
            args: Prisma.usuario_habilidadesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuario_habilidadesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload>
          }
          findMany: {
            args: Prisma.usuario_habilidadesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload>[]
          }
          create: {
            args: Prisma.usuario_habilidadesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload>
          }
          createMany: {
            args: Prisma.usuario_habilidadesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usuario_habilidadesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload>
          }
          update: {
            args: Prisma.usuario_habilidadesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload>
          }
          deleteMany: {
            args: Prisma.usuario_habilidadesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usuario_habilidadesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usuario_habilidadesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuario_habilidadesPayload>
          }
          aggregate: {
            args: Prisma.Usuario_habilidadesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsuario_habilidades>
          }
          groupBy: {
            args: Prisma.usuario_habilidadesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Usuario_habilidadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuario_habilidadesCountArgs<ExtArgs>,
            result: $Utils.Optional<Usuario_habilidadesCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>,
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EscolaridadCountOutputType
   */

  export type EscolaridadCountOutputType = {
    usuarios: number
  }

  export type EscolaridadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | EscolaridadCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes

  /**
   * EscolaridadCountOutputType without action
   */
  export type EscolaridadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscolaridadCountOutputType
     */
    select?: EscolaridadCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * EscolaridadCountOutputType without action
   */
  export type EscolaridadCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
  }



  /**
   * Count Type HabilidadesCountOutputType
   */

  export type HabilidadesCountOutputType = {
    usuario_habilidades: number
  }

  export type HabilidadesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_habilidades?: boolean | HabilidadesCountOutputTypeCountUsuario_habilidadesArgs
  }

  // Custom InputTypes

  /**
   * HabilidadesCountOutputType without action
   */
  export type HabilidadesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HabilidadesCountOutputType
     */
    select?: HabilidadesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * HabilidadesCountOutputType without action
   */
  export type HabilidadesCountOutputTypeCountUsuario_habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuario_habilidadesWhereInput
  }



  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    usuario_habilidades: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_habilidades?: boolean | UsuariosCountOutputTypeCountUsuario_habilidadesArgs
  }

  // Custom InputTypes

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountUsuario_habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuario_habilidadesWhereInput
  }



  /**
   * Models
   */

  /**
   * Model escolaridad
   */

  export type AggregateEscolaridad = {
    _count: EscolaridadCountAggregateOutputType | null
    _avg: EscolaridadAvgAggregateOutputType | null
    _sum: EscolaridadSumAggregateOutputType | null
    _min: EscolaridadMinAggregateOutputType | null
    _max: EscolaridadMaxAggregateOutputType | null
  }

  export type EscolaridadAvgAggregateOutputType = {
    id_escolaridad: number | null
  }

  export type EscolaridadSumAggregateOutputType = {
    id_escolaridad: number | null
  }

  export type EscolaridadMinAggregateOutputType = {
    id_escolaridad: number | null
    nivel: string | null
  }

  export type EscolaridadMaxAggregateOutputType = {
    id_escolaridad: number | null
    nivel: string | null
  }

  export type EscolaridadCountAggregateOutputType = {
    id_escolaridad: number
    nivel: number
    _all: number
  }


  export type EscolaridadAvgAggregateInputType = {
    id_escolaridad?: true
  }

  export type EscolaridadSumAggregateInputType = {
    id_escolaridad?: true
  }

  export type EscolaridadMinAggregateInputType = {
    id_escolaridad?: true
    nivel?: true
  }

  export type EscolaridadMaxAggregateInputType = {
    id_escolaridad?: true
    nivel?: true
  }

  export type EscolaridadCountAggregateInputType = {
    id_escolaridad?: true
    nivel?: true
    _all?: true
  }

  export type EscolaridadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which escolaridad to aggregate.
     */
    where?: escolaridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of escolaridads to fetch.
     */
    orderBy?: escolaridadOrderByWithRelationInput | escolaridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: escolaridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` escolaridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` escolaridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned escolaridads
    **/
    _count?: true | EscolaridadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EscolaridadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EscolaridadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EscolaridadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EscolaridadMaxAggregateInputType
  }

  export type GetEscolaridadAggregateType<T extends EscolaridadAggregateArgs> = {
        [P in keyof T & keyof AggregateEscolaridad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEscolaridad[P]>
      : GetScalarType<T[P], AggregateEscolaridad[P]>
  }




  export type escolaridadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: escolaridadWhereInput
    orderBy?: escolaridadOrderByWithAggregationInput | escolaridadOrderByWithAggregationInput[]
    by: EscolaridadScalarFieldEnum[] | EscolaridadScalarFieldEnum
    having?: escolaridadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EscolaridadCountAggregateInputType | true
    _avg?: EscolaridadAvgAggregateInputType
    _sum?: EscolaridadSumAggregateInputType
    _min?: EscolaridadMinAggregateInputType
    _max?: EscolaridadMaxAggregateInputType
  }

  export type EscolaridadGroupByOutputType = {
    id_escolaridad: number
    nivel: string | null
    _count: EscolaridadCountAggregateOutputType | null
    _avg: EscolaridadAvgAggregateOutputType | null
    _sum: EscolaridadSumAggregateOutputType | null
    _min: EscolaridadMinAggregateOutputType | null
    _max: EscolaridadMaxAggregateOutputType | null
  }

  type GetEscolaridadGroupByPayload<T extends escolaridadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EscolaridadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EscolaridadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EscolaridadGroupByOutputType[P]>
            : GetScalarType<T[P], EscolaridadGroupByOutputType[P]>
        }
      >
    >


  export type escolaridadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_escolaridad?: boolean
    nivel?: boolean
    usuarios?: boolean | escolaridad$usuariosArgs<ExtArgs>
    _count?: boolean | EscolaridadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["escolaridad"]>

  export type escolaridadSelectScalar = {
    id_escolaridad?: boolean
    nivel?: boolean
  }

  export type escolaridadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | escolaridad$usuariosArgs<ExtArgs>
    _count?: boolean | EscolaridadCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $escolaridadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "escolaridad"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_escolaridad: number
      nivel: string | null
    }, ExtArgs["result"]["escolaridad"]>
    composites: {}
  }


  type escolaridadGetPayload<S extends boolean | null | undefined | escolaridadDefaultArgs> = $Result.GetResult<Prisma.$escolaridadPayload, S>

  type escolaridadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<escolaridadFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EscolaridadCountAggregateInputType | true
    }

  export interface escolaridadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['escolaridad'], meta: { name: 'escolaridad' } }
    /**
     * Find zero or one Escolaridad that matches the filter.
     * @param {escolaridadFindUniqueArgs} args - Arguments to find a Escolaridad
     * @example
     * // Get one Escolaridad
     * const escolaridad = await prisma.escolaridad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends escolaridadFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, escolaridadFindUniqueArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Escolaridad that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {escolaridadFindUniqueOrThrowArgs} args - Arguments to find a Escolaridad
     * @example
     * // Get one Escolaridad
     * const escolaridad = await prisma.escolaridad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends escolaridadFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, escolaridadFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Escolaridad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {escolaridadFindFirstArgs} args - Arguments to find a Escolaridad
     * @example
     * // Get one Escolaridad
     * const escolaridad = await prisma.escolaridad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends escolaridadFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, escolaridadFindFirstArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Escolaridad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {escolaridadFindFirstOrThrowArgs} args - Arguments to find a Escolaridad
     * @example
     * // Get one Escolaridad
     * const escolaridad = await prisma.escolaridad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends escolaridadFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, escolaridadFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Escolaridads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {escolaridadFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Escolaridads
     * const escolaridads = await prisma.escolaridad.findMany()
     * 
     * // Get first 10 Escolaridads
     * const escolaridads = await prisma.escolaridad.findMany({ take: 10 })
     * 
     * // Only select the `id_escolaridad`
     * const escolaridadWithId_escolaridadOnly = await prisma.escolaridad.findMany({ select: { id_escolaridad: true } })
     * 
    **/
    findMany<T extends escolaridadFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, escolaridadFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Escolaridad.
     * @param {escolaridadCreateArgs} args - Arguments to create a Escolaridad.
     * @example
     * // Create one Escolaridad
     * const Escolaridad = await prisma.escolaridad.create({
     *   data: {
     *     // ... data to create a Escolaridad
     *   }
     * })
     * 
    **/
    create<T extends escolaridadCreateArgs<ExtArgs>>(
      args: SelectSubset<T, escolaridadCreateArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Escolaridads.
     *     @param {escolaridadCreateManyArgs} args - Arguments to create many Escolaridads.
     *     @example
     *     // Create many Escolaridads
     *     const escolaridad = await prisma.escolaridad.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends escolaridadCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, escolaridadCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Escolaridad.
     * @param {escolaridadDeleteArgs} args - Arguments to delete one Escolaridad.
     * @example
     * // Delete one Escolaridad
     * const Escolaridad = await prisma.escolaridad.delete({
     *   where: {
     *     // ... filter to delete one Escolaridad
     *   }
     * })
     * 
    **/
    delete<T extends escolaridadDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, escolaridadDeleteArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Escolaridad.
     * @param {escolaridadUpdateArgs} args - Arguments to update one Escolaridad.
     * @example
     * // Update one Escolaridad
     * const escolaridad = await prisma.escolaridad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends escolaridadUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, escolaridadUpdateArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Escolaridads.
     * @param {escolaridadDeleteManyArgs} args - Arguments to filter Escolaridads to delete.
     * @example
     * // Delete a few Escolaridads
     * const { count } = await prisma.escolaridad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends escolaridadDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, escolaridadDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Escolaridads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {escolaridadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Escolaridads
     * const escolaridad = await prisma.escolaridad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends escolaridadUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, escolaridadUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Escolaridad.
     * @param {escolaridadUpsertArgs} args - Arguments to update or create a Escolaridad.
     * @example
     * // Update or create a Escolaridad
     * const escolaridad = await prisma.escolaridad.upsert({
     *   create: {
     *     // ... data to create a Escolaridad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Escolaridad we want to update
     *   }
     * })
    **/
    upsert<T extends escolaridadUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, escolaridadUpsertArgs<ExtArgs>>
    ): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Escolaridads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {escolaridadCountArgs} args - Arguments to filter Escolaridads to count.
     * @example
     * // Count the number of Escolaridads
     * const count = await prisma.escolaridad.count({
     *   where: {
     *     // ... the filter for the Escolaridads we want to count
     *   }
     * })
    **/
    count<T extends escolaridadCountArgs>(
      args?: Subset<T, escolaridadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EscolaridadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Escolaridad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaridadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EscolaridadAggregateArgs>(args: Subset<T, EscolaridadAggregateArgs>): Prisma.PrismaPromise<GetEscolaridadAggregateType<T>>

    /**
     * Group by Escolaridad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {escolaridadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends escolaridadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: escolaridadGroupByArgs['orderBy'] }
        : { orderBy?: escolaridadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, escolaridadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEscolaridadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the escolaridad model
   */
  readonly fields: escolaridadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for escolaridad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__escolaridadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuarios<T extends escolaridad$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, escolaridad$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the escolaridad model
   */ 
  interface escolaridadFieldRefs {
    readonly id_escolaridad: FieldRef<"escolaridad", 'Int'>
    readonly nivel: FieldRef<"escolaridad", 'String'>
  }
    

  // Custom InputTypes

  /**
   * escolaridad findUnique
   */
  export type escolaridadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * Filter, which escolaridad to fetch.
     */
    where: escolaridadWhereUniqueInput
  }


  /**
   * escolaridad findUniqueOrThrow
   */
  export type escolaridadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * Filter, which escolaridad to fetch.
     */
    where: escolaridadWhereUniqueInput
  }


  /**
   * escolaridad findFirst
   */
  export type escolaridadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * Filter, which escolaridad to fetch.
     */
    where?: escolaridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of escolaridads to fetch.
     */
    orderBy?: escolaridadOrderByWithRelationInput | escolaridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for escolaridads.
     */
    cursor?: escolaridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` escolaridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` escolaridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of escolaridads.
     */
    distinct?: EscolaridadScalarFieldEnum | EscolaridadScalarFieldEnum[]
  }


  /**
   * escolaridad findFirstOrThrow
   */
  export type escolaridadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * Filter, which escolaridad to fetch.
     */
    where?: escolaridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of escolaridads to fetch.
     */
    orderBy?: escolaridadOrderByWithRelationInput | escolaridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for escolaridads.
     */
    cursor?: escolaridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` escolaridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` escolaridads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of escolaridads.
     */
    distinct?: EscolaridadScalarFieldEnum | EscolaridadScalarFieldEnum[]
  }


  /**
   * escolaridad findMany
   */
  export type escolaridadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * Filter, which escolaridads to fetch.
     */
    where?: escolaridadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of escolaridads to fetch.
     */
    orderBy?: escolaridadOrderByWithRelationInput | escolaridadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing escolaridads.
     */
    cursor?: escolaridadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` escolaridads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` escolaridads.
     */
    skip?: number
    distinct?: EscolaridadScalarFieldEnum | EscolaridadScalarFieldEnum[]
  }


  /**
   * escolaridad create
   */
  export type escolaridadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * The data needed to create a escolaridad.
     */
    data?: XOR<escolaridadCreateInput, escolaridadUncheckedCreateInput>
  }


  /**
   * escolaridad createMany
   */
  export type escolaridadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many escolaridads.
     */
    data: escolaridadCreateManyInput | escolaridadCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * escolaridad update
   */
  export type escolaridadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * The data needed to update a escolaridad.
     */
    data: XOR<escolaridadUpdateInput, escolaridadUncheckedUpdateInput>
    /**
     * Choose, which escolaridad to update.
     */
    where: escolaridadWhereUniqueInput
  }


  /**
   * escolaridad updateMany
   */
  export type escolaridadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update escolaridads.
     */
    data: XOR<escolaridadUpdateManyMutationInput, escolaridadUncheckedUpdateManyInput>
    /**
     * Filter which escolaridads to update
     */
    where?: escolaridadWhereInput
  }


  /**
   * escolaridad upsert
   */
  export type escolaridadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * The filter to search for the escolaridad to update in case it exists.
     */
    where: escolaridadWhereUniqueInput
    /**
     * In case the escolaridad found by the `where` argument doesn't exist, create a new escolaridad with this data.
     */
    create: XOR<escolaridadCreateInput, escolaridadUncheckedCreateInput>
    /**
     * In case the escolaridad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<escolaridadUpdateInput, escolaridadUncheckedUpdateInput>
  }


  /**
   * escolaridad delete
   */
  export type escolaridadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    /**
     * Filter which escolaridad to delete.
     */
    where: escolaridadWhereUniqueInput
  }


  /**
   * escolaridad deleteMany
   */
  export type escolaridadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which escolaridads to delete
     */
    where?: escolaridadWhereInput
  }


  /**
   * escolaridad.usuarios
   */
  export type escolaridad$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    cursor?: usuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }


  /**
   * escolaridad without action
   */
  export type escolaridadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
  }



  /**
   * Model habilidades
   */

  export type AggregateHabilidades = {
    _count: HabilidadesCountAggregateOutputType | null
    _avg: HabilidadesAvgAggregateOutputType | null
    _sum: HabilidadesSumAggregateOutputType | null
    _min: HabilidadesMinAggregateOutputType | null
    _max: HabilidadesMaxAggregateOutputType | null
  }

  export type HabilidadesAvgAggregateOutputType = {
    id_habilidad: number | null
  }

  export type HabilidadesSumAggregateOutputType = {
    id_habilidad: number | null
  }

  export type HabilidadesMinAggregateOutputType = {
    id_habilidad: number | null
    habilidad: string | null
  }

  export type HabilidadesMaxAggregateOutputType = {
    id_habilidad: number | null
    habilidad: string | null
  }

  export type HabilidadesCountAggregateOutputType = {
    id_habilidad: number
    habilidad: number
    _all: number
  }


  export type HabilidadesAvgAggregateInputType = {
    id_habilidad?: true
  }

  export type HabilidadesSumAggregateInputType = {
    id_habilidad?: true
  }

  export type HabilidadesMinAggregateInputType = {
    id_habilidad?: true
    habilidad?: true
  }

  export type HabilidadesMaxAggregateInputType = {
    id_habilidad?: true
    habilidad?: true
  }

  export type HabilidadesCountAggregateInputType = {
    id_habilidad?: true
    habilidad?: true
    _all?: true
  }

  export type HabilidadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which habilidades to aggregate.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned habilidades
    **/
    _count?: true | HabilidadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HabilidadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HabilidadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HabilidadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HabilidadesMaxAggregateInputType
  }

  export type GetHabilidadesAggregateType<T extends HabilidadesAggregateArgs> = {
        [P in keyof T & keyof AggregateHabilidades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHabilidades[P]>
      : GetScalarType<T[P], AggregateHabilidades[P]>
  }




  export type habilidadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: habilidadesWhereInput
    orderBy?: habilidadesOrderByWithAggregationInput | habilidadesOrderByWithAggregationInput[]
    by: HabilidadesScalarFieldEnum[] | HabilidadesScalarFieldEnum
    having?: habilidadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HabilidadesCountAggregateInputType | true
    _avg?: HabilidadesAvgAggregateInputType
    _sum?: HabilidadesSumAggregateInputType
    _min?: HabilidadesMinAggregateInputType
    _max?: HabilidadesMaxAggregateInputType
  }

  export type HabilidadesGroupByOutputType = {
    id_habilidad: number
    habilidad: string | null
    _count: HabilidadesCountAggregateOutputType | null
    _avg: HabilidadesAvgAggregateOutputType | null
    _sum: HabilidadesSumAggregateOutputType | null
    _min: HabilidadesMinAggregateOutputType | null
    _max: HabilidadesMaxAggregateOutputType | null
  }

  type GetHabilidadesGroupByPayload<T extends habilidadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HabilidadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HabilidadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HabilidadesGroupByOutputType[P]>
            : GetScalarType<T[P], HabilidadesGroupByOutputType[P]>
        }
      >
    >


  export type habilidadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_habilidad?: boolean
    habilidad?: boolean
    usuario_habilidades?: boolean | habilidades$usuario_habilidadesArgs<ExtArgs>
    _count?: boolean | HabilidadesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["habilidades"]>

  export type habilidadesSelectScalar = {
    id_habilidad?: boolean
    habilidad?: boolean
  }

  export type habilidadesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_habilidades?: boolean | habilidades$usuario_habilidadesArgs<ExtArgs>
    _count?: boolean | HabilidadesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $habilidadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "habilidades"
    objects: {
      usuario_habilidades: Prisma.$usuario_habilidadesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_habilidad: number
      habilidad: string | null
    }, ExtArgs["result"]["habilidades"]>
    composites: {}
  }


  type habilidadesGetPayload<S extends boolean | null | undefined | habilidadesDefaultArgs> = $Result.GetResult<Prisma.$habilidadesPayload, S>

  type habilidadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<habilidadesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HabilidadesCountAggregateInputType | true
    }

  export interface habilidadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['habilidades'], meta: { name: 'habilidades' } }
    /**
     * Find zero or one Habilidades that matches the filter.
     * @param {habilidadesFindUniqueArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends habilidadesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, habilidadesFindUniqueArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Habilidades that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {habilidadesFindUniqueOrThrowArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends habilidadesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, habilidadesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Habilidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesFindFirstArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends habilidadesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, habilidadesFindFirstArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Habilidades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesFindFirstOrThrowArgs} args - Arguments to find a Habilidades
     * @example
     * // Get one Habilidades
     * const habilidades = await prisma.habilidades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends habilidadesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, habilidadesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Habilidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Habilidades
     * const habilidades = await prisma.habilidades.findMany()
     * 
     * // Get first 10 Habilidades
     * const habilidades = await prisma.habilidades.findMany({ take: 10 })
     * 
     * // Only select the `id_habilidad`
     * const habilidadesWithId_habilidadOnly = await prisma.habilidades.findMany({ select: { id_habilidad: true } })
     * 
    **/
    findMany<T extends habilidadesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, habilidadesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Habilidades.
     * @param {habilidadesCreateArgs} args - Arguments to create a Habilidades.
     * @example
     * // Create one Habilidades
     * const Habilidades = await prisma.habilidades.create({
     *   data: {
     *     // ... data to create a Habilidades
     *   }
     * })
     * 
    **/
    create<T extends habilidadesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, habilidadesCreateArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Habilidades.
     *     @param {habilidadesCreateManyArgs} args - Arguments to create many Habilidades.
     *     @example
     *     // Create many Habilidades
     *     const habilidades = await prisma.habilidades.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends habilidadesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, habilidadesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Habilidades.
     * @param {habilidadesDeleteArgs} args - Arguments to delete one Habilidades.
     * @example
     * // Delete one Habilidades
     * const Habilidades = await prisma.habilidades.delete({
     *   where: {
     *     // ... filter to delete one Habilidades
     *   }
     * })
     * 
    **/
    delete<T extends habilidadesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, habilidadesDeleteArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Habilidades.
     * @param {habilidadesUpdateArgs} args - Arguments to update one Habilidades.
     * @example
     * // Update one Habilidades
     * const habilidades = await prisma.habilidades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends habilidadesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, habilidadesUpdateArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Habilidades.
     * @param {habilidadesDeleteManyArgs} args - Arguments to filter Habilidades to delete.
     * @example
     * // Delete a few Habilidades
     * const { count } = await prisma.habilidades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends habilidadesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, habilidadesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Habilidades
     * const habilidades = await prisma.habilidades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends habilidadesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, habilidadesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Habilidades.
     * @param {habilidadesUpsertArgs} args - Arguments to update or create a Habilidades.
     * @example
     * // Update or create a Habilidades
     * const habilidades = await prisma.habilidades.upsert({
     *   create: {
     *     // ... data to create a Habilidades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Habilidades we want to update
     *   }
     * })
    **/
    upsert<T extends habilidadesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, habilidadesUpsertArgs<ExtArgs>>
    ): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesCountArgs} args - Arguments to filter Habilidades to count.
     * @example
     * // Count the number of Habilidades
     * const count = await prisma.habilidades.count({
     *   where: {
     *     // ... the filter for the Habilidades we want to count
     *   }
     * })
    **/
    count<T extends habilidadesCountArgs>(
      args?: Subset<T, habilidadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HabilidadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HabilidadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HabilidadesAggregateArgs>(args: Subset<T, HabilidadesAggregateArgs>): Prisma.PrismaPromise<GetHabilidadesAggregateType<T>>

    /**
     * Group by Habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {habilidadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends habilidadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: habilidadesGroupByArgs['orderBy'] }
        : { orderBy?: habilidadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, habilidadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHabilidadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the habilidades model
   */
  readonly fields: habilidadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for habilidades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__habilidadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario_habilidades<T extends habilidades$usuario_habilidadesArgs<ExtArgs> = {}>(args?: Subset<T, habilidades$usuario_habilidadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the habilidades model
   */ 
  interface habilidadesFieldRefs {
    readonly id_habilidad: FieldRef<"habilidades", 'Int'>
    readonly habilidad: FieldRef<"habilidades", 'String'>
  }
    

  // Custom InputTypes

  /**
   * habilidades findUnique
   */
  export type habilidadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where: habilidadesWhereUniqueInput
  }


  /**
   * habilidades findUniqueOrThrow
   */
  export type habilidadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where: habilidadesWhereUniqueInput
  }


  /**
   * habilidades findFirst
   */
  export type habilidadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for habilidades.
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of habilidades.
     */
    distinct?: HabilidadesScalarFieldEnum | HabilidadesScalarFieldEnum[]
  }


  /**
   * habilidades findFirstOrThrow
   */
  export type habilidadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for habilidades.
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of habilidades.
     */
    distinct?: HabilidadesScalarFieldEnum | HabilidadesScalarFieldEnum[]
  }


  /**
   * habilidades findMany
   */
  export type habilidadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which habilidades to fetch.
     */
    where?: habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of habilidades to fetch.
     */
    orderBy?: habilidadesOrderByWithRelationInput | habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing habilidades.
     */
    cursor?: habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` habilidades.
     */
    skip?: number
    distinct?: HabilidadesScalarFieldEnum | HabilidadesScalarFieldEnum[]
  }


  /**
   * habilidades create
   */
  export type habilidadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * The data needed to create a habilidades.
     */
    data?: XOR<habilidadesCreateInput, habilidadesUncheckedCreateInput>
  }


  /**
   * habilidades createMany
   */
  export type habilidadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many habilidades.
     */
    data: habilidadesCreateManyInput | habilidadesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * habilidades update
   */
  export type habilidadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * The data needed to update a habilidades.
     */
    data: XOR<habilidadesUpdateInput, habilidadesUncheckedUpdateInput>
    /**
     * Choose, which habilidades to update.
     */
    where: habilidadesWhereUniqueInput
  }


  /**
   * habilidades updateMany
   */
  export type habilidadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update habilidades.
     */
    data: XOR<habilidadesUpdateManyMutationInput, habilidadesUncheckedUpdateManyInput>
    /**
     * Filter which habilidades to update
     */
    where?: habilidadesWhereInput
  }


  /**
   * habilidades upsert
   */
  export type habilidadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * The filter to search for the habilidades to update in case it exists.
     */
    where: habilidadesWhereUniqueInput
    /**
     * In case the habilidades found by the `where` argument doesn't exist, create a new habilidades with this data.
     */
    create: XOR<habilidadesCreateInput, habilidadesUncheckedCreateInput>
    /**
     * In case the habilidades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<habilidadesUpdateInput, habilidadesUncheckedUpdateInput>
  }


  /**
   * habilidades delete
   */
  export type habilidadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    /**
     * Filter which habilidades to delete.
     */
    where: habilidadesWhereUniqueInput
  }


  /**
   * habilidades deleteMany
   */
  export type habilidadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which habilidades to delete
     */
    where?: habilidadesWhereInput
  }


  /**
   * habilidades.usuario_habilidades
   */
  export type habilidades$usuario_habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    where?: usuario_habilidadesWhereInput
    orderBy?: usuario_habilidadesOrderByWithRelationInput | usuario_habilidadesOrderByWithRelationInput[]
    cursor?: usuario_habilidadesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Usuario_habilidadesScalarFieldEnum | Usuario_habilidadesScalarFieldEnum[]
  }


  /**
   * habilidades without action
   */
  export type habilidadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
  }



  /**
   * Model usuario_habilidades
   */

  export type AggregateUsuario_habilidades = {
    _count: Usuario_habilidadesCountAggregateOutputType | null
    _avg: Usuario_habilidadesAvgAggregateOutputType | null
    _sum: Usuario_habilidadesSumAggregateOutputType | null
    _min: Usuario_habilidadesMinAggregateOutputType | null
    _max: Usuario_habilidadesMaxAggregateOutputType | null
  }

  export type Usuario_habilidadesAvgAggregateOutputType = {
    id_usuario_habilidades: number | null
    id_usuario: number | null
    id_habilidad: number | null
  }

  export type Usuario_habilidadesSumAggregateOutputType = {
    id_usuario_habilidades: number | null
    id_usuario: number | null
    id_habilidad: number | null
  }

  export type Usuario_habilidadesMinAggregateOutputType = {
    id_usuario_habilidades: number | null
    id_usuario: number | null
    id_habilidad: number | null
  }

  export type Usuario_habilidadesMaxAggregateOutputType = {
    id_usuario_habilidades: number | null
    id_usuario: number | null
    id_habilidad: number | null
  }

  export type Usuario_habilidadesCountAggregateOutputType = {
    id_usuario_habilidades: number
    id_usuario: number
    id_habilidad: number
    _all: number
  }


  export type Usuario_habilidadesAvgAggregateInputType = {
    id_usuario_habilidades?: true
    id_usuario?: true
    id_habilidad?: true
  }

  export type Usuario_habilidadesSumAggregateInputType = {
    id_usuario_habilidades?: true
    id_usuario?: true
    id_habilidad?: true
  }

  export type Usuario_habilidadesMinAggregateInputType = {
    id_usuario_habilidades?: true
    id_usuario?: true
    id_habilidad?: true
  }

  export type Usuario_habilidadesMaxAggregateInputType = {
    id_usuario_habilidades?: true
    id_usuario?: true
    id_habilidad?: true
  }

  export type Usuario_habilidadesCountAggregateInputType = {
    id_usuario_habilidades?: true
    id_usuario?: true
    id_habilidad?: true
    _all?: true
  }

  export type Usuario_habilidadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario_habilidades to aggregate.
     */
    where?: usuario_habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuario_habilidades to fetch.
     */
    orderBy?: usuario_habilidadesOrderByWithRelationInput | usuario_habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuario_habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuario_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuario_habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuario_habilidades
    **/
    _count?: true | Usuario_habilidadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Usuario_habilidadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Usuario_habilidadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Usuario_habilidadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Usuario_habilidadesMaxAggregateInputType
  }

  export type GetUsuario_habilidadesAggregateType<T extends Usuario_habilidadesAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario_habilidades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario_habilidades[P]>
      : GetScalarType<T[P], AggregateUsuario_habilidades[P]>
  }




  export type usuario_habilidadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuario_habilidadesWhereInput
    orderBy?: usuario_habilidadesOrderByWithAggregationInput | usuario_habilidadesOrderByWithAggregationInput[]
    by: Usuario_habilidadesScalarFieldEnum[] | Usuario_habilidadesScalarFieldEnum
    having?: usuario_habilidadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Usuario_habilidadesCountAggregateInputType | true
    _avg?: Usuario_habilidadesAvgAggregateInputType
    _sum?: Usuario_habilidadesSumAggregateInputType
    _min?: Usuario_habilidadesMinAggregateInputType
    _max?: Usuario_habilidadesMaxAggregateInputType
  }

  export type Usuario_habilidadesGroupByOutputType = {
    id_usuario_habilidades: number
    id_usuario: number | null
    id_habilidad: number | null
    _count: Usuario_habilidadesCountAggregateOutputType | null
    _avg: Usuario_habilidadesAvgAggregateOutputType | null
    _sum: Usuario_habilidadesSumAggregateOutputType | null
    _min: Usuario_habilidadesMinAggregateOutputType | null
    _max: Usuario_habilidadesMaxAggregateOutputType | null
  }

  type GetUsuario_habilidadesGroupByPayload<T extends usuario_habilidadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Usuario_habilidadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Usuario_habilidadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Usuario_habilidadesGroupByOutputType[P]>
            : GetScalarType<T[P], Usuario_habilidadesGroupByOutputType[P]>
        }
      >
    >


  export type usuario_habilidadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario_habilidades?: boolean
    id_usuario?: boolean
    id_habilidad?: boolean
    habilidades?: boolean | usuario_habilidades$habilidadesArgs<ExtArgs>
    usuarios?: boolean | usuario_habilidades$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["usuario_habilidades"]>

  export type usuario_habilidadesSelectScalar = {
    id_usuario_habilidades?: boolean
    id_usuario?: boolean
    id_habilidad?: boolean
  }

  export type usuario_habilidadesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    habilidades?: boolean | usuario_habilidades$habilidadesArgs<ExtArgs>
    usuarios?: boolean | usuario_habilidades$usuariosArgs<ExtArgs>
  }


  export type $usuario_habilidadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuario_habilidades"
    objects: {
      habilidades: Prisma.$habilidadesPayload<ExtArgs> | null
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario_habilidades: number
      id_usuario: number | null
      id_habilidad: number | null
    }, ExtArgs["result"]["usuario_habilidades"]>
    composites: {}
  }


  type usuario_habilidadesGetPayload<S extends boolean | null | undefined | usuario_habilidadesDefaultArgs> = $Result.GetResult<Prisma.$usuario_habilidadesPayload, S>

  type usuario_habilidadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usuario_habilidadesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Usuario_habilidadesCountAggregateInputType | true
    }

  export interface usuario_habilidadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuario_habilidades'], meta: { name: 'usuario_habilidades' } }
    /**
     * Find zero or one Usuario_habilidades that matches the filter.
     * @param {usuario_habilidadesFindUniqueArgs} args - Arguments to find a Usuario_habilidades
     * @example
     * // Get one Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usuario_habilidadesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usuario_habilidadesFindUniqueArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Usuario_habilidades that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usuario_habilidadesFindUniqueOrThrowArgs} args - Arguments to find a Usuario_habilidades
     * @example
     * // Get one Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usuario_habilidadesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usuario_habilidadesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Usuario_habilidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuario_habilidadesFindFirstArgs} args - Arguments to find a Usuario_habilidades
     * @example
     * // Get one Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usuario_habilidadesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usuario_habilidadesFindFirstArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Usuario_habilidades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuario_habilidadesFindFirstOrThrowArgs} args - Arguments to find a Usuario_habilidades
     * @example
     * // Get one Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usuario_habilidadesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usuario_habilidadesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Usuario_habilidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuario_habilidadesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.findMany()
     * 
     * // Get first 10 Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario_habilidades`
     * const usuario_habilidadesWithId_usuario_habilidadesOnly = await prisma.usuario_habilidades.findMany({ select: { id_usuario_habilidades: true } })
     * 
    **/
    findMany<T extends usuario_habilidadesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuario_habilidadesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Usuario_habilidades.
     * @param {usuario_habilidadesCreateArgs} args - Arguments to create a Usuario_habilidades.
     * @example
     * // Create one Usuario_habilidades
     * const Usuario_habilidades = await prisma.usuario_habilidades.create({
     *   data: {
     *     // ... data to create a Usuario_habilidades
     *   }
     * })
     * 
    **/
    create<T extends usuario_habilidadesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usuario_habilidadesCreateArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Usuario_habilidades.
     *     @param {usuario_habilidadesCreateManyArgs} args - Arguments to create many Usuario_habilidades.
     *     @example
     *     // Create many Usuario_habilidades
     *     const usuario_habilidades = await prisma.usuario_habilidades.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usuario_habilidadesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuario_habilidadesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuario_habilidades.
     * @param {usuario_habilidadesDeleteArgs} args - Arguments to delete one Usuario_habilidades.
     * @example
     * // Delete one Usuario_habilidades
     * const Usuario_habilidades = await prisma.usuario_habilidades.delete({
     *   where: {
     *     // ... filter to delete one Usuario_habilidades
     *   }
     * })
     * 
    **/
    delete<T extends usuario_habilidadesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usuario_habilidadesDeleteArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Usuario_habilidades.
     * @param {usuario_habilidadesUpdateArgs} args - Arguments to update one Usuario_habilidades.
     * @example
     * // Update one Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usuario_habilidadesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usuario_habilidadesUpdateArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Usuario_habilidades.
     * @param {usuario_habilidadesDeleteManyArgs} args - Arguments to filter Usuario_habilidades to delete.
     * @example
     * // Delete a few Usuario_habilidades
     * const { count } = await prisma.usuario_habilidades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usuario_habilidadesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuario_habilidadesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuario_habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuario_habilidadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usuario_habilidadesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usuario_habilidadesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario_habilidades.
     * @param {usuario_habilidadesUpsertArgs} args - Arguments to update or create a Usuario_habilidades.
     * @example
     * // Update or create a Usuario_habilidades
     * const usuario_habilidades = await prisma.usuario_habilidades.upsert({
     *   create: {
     *     // ... data to create a Usuario_habilidades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario_habilidades we want to update
     *   }
     * })
    **/
    upsert<T extends usuario_habilidadesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usuario_habilidadesUpsertArgs<ExtArgs>>
    ): Prisma__usuario_habilidadesClient<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Usuario_habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuario_habilidadesCountArgs} args - Arguments to filter Usuario_habilidades to count.
     * @example
     * // Count the number of Usuario_habilidades
     * const count = await prisma.usuario_habilidades.count({
     *   where: {
     *     // ... the filter for the Usuario_habilidades we want to count
     *   }
     * })
    **/
    count<T extends usuario_habilidadesCountArgs>(
      args?: Subset<T, usuario_habilidadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Usuario_habilidadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario_habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Usuario_habilidadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Usuario_habilidadesAggregateArgs>(args: Subset<T, Usuario_habilidadesAggregateArgs>): Prisma.PrismaPromise<GetUsuario_habilidadesAggregateType<T>>

    /**
     * Group by Usuario_habilidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuario_habilidadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuario_habilidadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuario_habilidadesGroupByArgs['orderBy'] }
        : { orderBy?: usuario_habilidadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuario_habilidadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuario_habilidadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuario_habilidades model
   */
  readonly fields: usuario_habilidadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuario_habilidades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuario_habilidadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    habilidades<T extends usuario_habilidades$habilidadesArgs<ExtArgs> = {}>(args?: Subset<T, usuario_habilidades$habilidadesArgs<ExtArgs>>): Prisma__habilidadesClient<$Result.GetResult<Prisma.$habilidadesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    usuarios<T extends usuario_habilidades$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, usuario_habilidades$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the usuario_habilidades model
   */ 
  interface usuario_habilidadesFieldRefs {
    readonly id_usuario_habilidades: FieldRef<"usuario_habilidades", 'Int'>
    readonly id_usuario: FieldRef<"usuario_habilidades", 'Int'>
    readonly id_habilidad: FieldRef<"usuario_habilidades", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * usuario_habilidades findUnique
   */
  export type usuario_habilidadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which usuario_habilidades to fetch.
     */
    where: usuario_habilidadesWhereUniqueInput
  }


  /**
   * usuario_habilidades findUniqueOrThrow
   */
  export type usuario_habilidadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which usuario_habilidades to fetch.
     */
    where: usuario_habilidadesWhereUniqueInput
  }


  /**
   * usuario_habilidades findFirst
   */
  export type usuario_habilidadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which usuario_habilidades to fetch.
     */
    where?: usuario_habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuario_habilidades to fetch.
     */
    orderBy?: usuario_habilidadesOrderByWithRelationInput | usuario_habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuario_habilidades.
     */
    cursor?: usuario_habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuario_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuario_habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuario_habilidades.
     */
    distinct?: Usuario_habilidadesScalarFieldEnum | Usuario_habilidadesScalarFieldEnum[]
  }


  /**
   * usuario_habilidades findFirstOrThrow
   */
  export type usuario_habilidadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which usuario_habilidades to fetch.
     */
    where?: usuario_habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuario_habilidades to fetch.
     */
    orderBy?: usuario_habilidadesOrderByWithRelationInput | usuario_habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuario_habilidades.
     */
    cursor?: usuario_habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuario_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuario_habilidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuario_habilidades.
     */
    distinct?: Usuario_habilidadesScalarFieldEnum | Usuario_habilidadesScalarFieldEnum[]
  }


  /**
   * usuario_habilidades findMany
   */
  export type usuario_habilidadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * Filter, which usuario_habilidades to fetch.
     */
    where?: usuario_habilidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuario_habilidades to fetch.
     */
    orderBy?: usuario_habilidadesOrderByWithRelationInput | usuario_habilidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuario_habilidades.
     */
    cursor?: usuario_habilidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuario_habilidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuario_habilidades.
     */
    skip?: number
    distinct?: Usuario_habilidadesScalarFieldEnum | Usuario_habilidadesScalarFieldEnum[]
  }


  /**
   * usuario_habilidades create
   */
  export type usuario_habilidadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * The data needed to create a usuario_habilidades.
     */
    data?: XOR<usuario_habilidadesCreateInput, usuario_habilidadesUncheckedCreateInput>
  }


  /**
   * usuario_habilidades createMany
   */
  export type usuario_habilidadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuario_habilidades.
     */
    data: usuario_habilidadesCreateManyInput | usuario_habilidadesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * usuario_habilidades update
   */
  export type usuario_habilidadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * The data needed to update a usuario_habilidades.
     */
    data: XOR<usuario_habilidadesUpdateInput, usuario_habilidadesUncheckedUpdateInput>
    /**
     * Choose, which usuario_habilidades to update.
     */
    where: usuario_habilidadesWhereUniqueInput
  }


  /**
   * usuario_habilidades updateMany
   */
  export type usuario_habilidadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuario_habilidades.
     */
    data: XOR<usuario_habilidadesUpdateManyMutationInput, usuario_habilidadesUncheckedUpdateManyInput>
    /**
     * Filter which usuario_habilidades to update
     */
    where?: usuario_habilidadesWhereInput
  }


  /**
   * usuario_habilidades upsert
   */
  export type usuario_habilidadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * The filter to search for the usuario_habilidades to update in case it exists.
     */
    where: usuario_habilidadesWhereUniqueInput
    /**
     * In case the usuario_habilidades found by the `where` argument doesn't exist, create a new usuario_habilidades with this data.
     */
    create: XOR<usuario_habilidadesCreateInput, usuario_habilidadesUncheckedCreateInput>
    /**
     * In case the usuario_habilidades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuario_habilidadesUpdateInput, usuario_habilidadesUncheckedUpdateInput>
  }


  /**
   * usuario_habilidades delete
   */
  export type usuario_habilidadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    /**
     * Filter which usuario_habilidades to delete.
     */
    where: usuario_habilidadesWhereUniqueInput
  }


  /**
   * usuario_habilidades deleteMany
   */
  export type usuario_habilidadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario_habilidades to delete
     */
    where?: usuario_habilidadesWhereInput
  }


  /**
   * usuario_habilidades.habilidades
   */
  export type usuario_habilidades$habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the habilidades
     */
    select?: habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: habilidadesInclude<ExtArgs> | null
    where?: habilidadesWhereInput
  }


  /**
   * usuario_habilidades.usuarios
   */
  export type usuario_habilidades$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }


  /**
   * usuario_habilidades without action
   */
  export type usuario_habilidadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
  }



  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    id_usuario: number | null
    id_escolaridad: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    id_usuario: number | null
    id_escolaridad: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    id_usuario: number | null
    curp: string | null
    nombre: string | null
    apellidos: string | null
    direccion: string | null
    fecha_nacimiento: Date | null
    correo_electronico: string | null
    password: string | null
    id_escolaridad: number | null
    fotografia: string | null
  }

  export type UsuariosMaxAggregateOutputType = {
    id_usuario: number | null
    curp: string | null
    nombre: string | null
    apellidos: string | null
    direccion: string | null
    fecha_nacimiento: Date | null
    correo_electronico: string | null
    password: string | null
    id_escolaridad: number | null
    fotografia: string | null
  }

  export type UsuariosCountAggregateOutputType = {
    id_usuario: number
    curp: number
    nombre: number
    apellidos: number
    direccion: number
    fecha_nacimiento: number
    correo_electronico: number
    password: number
    id_escolaridad: number
    fotografia: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    id_usuario?: true
    id_escolaridad?: true
  }

  export type UsuariosSumAggregateInputType = {
    id_usuario?: true
    id_escolaridad?: true
  }

  export type UsuariosMinAggregateInputType = {
    id_usuario?: true
    curp?: true
    nombre?: true
    apellidos?: true
    direccion?: true
    fecha_nacimiento?: true
    correo_electronico?: true
    password?: true
    id_escolaridad?: true
    fotografia?: true
  }

  export type UsuariosMaxAggregateInputType = {
    id_usuario?: true
    curp?: true
    nombre?: true
    apellidos?: true
    direccion?: true
    fecha_nacimiento?: true
    correo_electronico?: true
    password?: true
    id_escolaridad?: true
    fotografia?: true
  }

  export type UsuariosCountAggregateInputType = {
    id_usuario?: true
    curp?: true
    nombre?: true
    apellidos?: true
    direccion?: true
    fecha_nacimiento?: true
    correo_electronico?: true
    password?: true
    id_escolaridad?: true
    fotografia?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    id_usuario: number
    curp: string | null
    nombre: string | null
    apellidos: string | null
    direccion: string | null
    fecha_nacimiento: Date | null
    correo_electronico: string | null
    password: string | null
    id_escolaridad: number | null
    fotografia: string | null
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    curp?: boolean
    nombre?: boolean
    apellidos?: boolean
    direccion?: boolean
    fecha_nacimiento?: boolean
    correo_electronico?: boolean
    password?: boolean
    id_escolaridad?: boolean
    fotografia?: boolean
    usuario_habilidades?: boolean | usuarios$usuario_habilidadesArgs<ExtArgs>
    escolaridad?: boolean | usuarios$escolaridadArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectScalar = {
    id_usuario?: boolean
    curp?: boolean
    nombre?: boolean
    apellidos?: boolean
    direccion?: boolean
    fecha_nacimiento?: boolean
    correo_electronico?: boolean
    password?: boolean
    id_escolaridad?: boolean
    fotografia?: boolean
  }

  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_habilidades?: boolean | usuarios$usuario_habilidadesArgs<ExtArgs>
    escolaridad?: boolean | usuarios$escolaridadArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      usuario_habilidades: Prisma.$usuario_habilidadesPayload<ExtArgs>[]
      escolaridad: Prisma.$escolaridadPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      curp: string | null
      nombre: string | null
      apellidos: string | null
      direccion: string | null
      fecha_nacimiento: Date | null
      correo_electronico: string | null
      password: string | null
      id_escolaridad: number | null
      fotografia: string | null
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }


  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usuariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Usuarios that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usuariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuariosWithId_usuarioOnly = await prisma.usuarios.findMany({ select: { id_usuario: true } })
     * 
    **/
    findMany<T extends usuariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
    **/
    create<T extends usuariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Usuarios.
     *     @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     *     @example
     *     // Create many Usuarios
     *     const usuarios = await prisma.usuarios.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usuariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
    **/
    delete<T extends usuariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usuariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usuariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usuariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
    **/
    upsert<T extends usuariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>
    ): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario_habilidades<T extends usuarios$usuario_habilidadesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$usuario_habilidadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuario_habilidadesPayload<ExtArgs>, T, 'findMany'> | Null>;

    escolaridad<T extends usuarios$escolaridadArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$escolaridadArgs<ExtArgs>>): Prisma__escolaridadClient<$Result.GetResult<Prisma.$escolaridadPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the usuarios model
   */ 
  interface usuariosFieldRefs {
    readonly id_usuario: FieldRef<"usuarios", 'Int'>
    readonly curp: FieldRef<"usuarios", 'String'>
    readonly nombre: FieldRef<"usuarios", 'String'>
    readonly apellidos: FieldRef<"usuarios", 'String'>
    readonly direccion: FieldRef<"usuarios", 'String'>
    readonly fecha_nacimiento: FieldRef<"usuarios", 'DateTime'>
    readonly correo_electronico: FieldRef<"usuarios", 'String'>
    readonly password: FieldRef<"usuarios", 'String'>
    readonly id_escolaridad: FieldRef<"usuarios", 'Int'>
    readonly fotografia: FieldRef<"usuarios", 'String'>
  }
    

  // Custom InputTypes

  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }


  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }


  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }


  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }


  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }


  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data?: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }


  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }


  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
  }


  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }


  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }


  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
  }


  /**
   * usuarios.usuario_habilidades
   */
  export type usuarios$usuario_habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario_habilidades
     */
    select?: usuario_habilidadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuario_habilidadesInclude<ExtArgs> | null
    where?: usuario_habilidadesWhereInput
    orderBy?: usuario_habilidadesOrderByWithRelationInput | usuario_habilidadesOrderByWithRelationInput[]
    cursor?: usuario_habilidadesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Usuario_habilidadesScalarFieldEnum | Usuario_habilidadesScalarFieldEnum[]
  }


  /**
   * usuarios.escolaridad
   */
  export type usuarios$escolaridadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the escolaridad
     */
    select?: escolaridadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: escolaridadInclude<ExtArgs> | null
    where?: escolaridadWhereInput
  }


  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuariosInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const EscolaridadScalarFieldEnum: {
    id_escolaridad: 'id_escolaridad',
    nivel: 'nivel'
  };

  export type EscolaridadScalarFieldEnum = (typeof EscolaridadScalarFieldEnum)[keyof typeof EscolaridadScalarFieldEnum]


  export const HabilidadesScalarFieldEnum: {
    id_habilidad: 'id_habilidad',
    habilidad: 'habilidad'
  };

  export type HabilidadesScalarFieldEnum = (typeof HabilidadesScalarFieldEnum)[keyof typeof HabilidadesScalarFieldEnum]


  export const Usuario_habilidadesScalarFieldEnum: {
    id_usuario_habilidades: 'id_usuario_habilidades',
    id_usuario: 'id_usuario',
    id_habilidad: 'id_habilidad'
  };

  export type Usuario_habilidadesScalarFieldEnum = (typeof Usuario_habilidadesScalarFieldEnum)[keyof typeof Usuario_habilidadesScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    id_usuario: 'id_usuario',
    curp: 'curp',
    nombre: 'nombre',
    apellidos: 'apellidos',
    direccion: 'direccion',
    fecha_nacimiento: 'fecha_nacimiento',
    correo_electronico: 'correo_electronico',
    password: 'password',
    id_escolaridad: 'id_escolaridad',
    fotografia: 'fotografia'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type escolaridadWhereInput = {
    AND?: escolaridadWhereInput | escolaridadWhereInput[]
    OR?: escolaridadWhereInput[]
    NOT?: escolaridadWhereInput | escolaridadWhereInput[]
    id_escolaridad?: IntFilter<"escolaridad"> | number
    nivel?: StringNullableFilter<"escolaridad"> | string | null
    usuarios?: UsuariosListRelationFilter
  }

  export type escolaridadOrderByWithRelationInput = {
    id_escolaridad?: SortOrder
    nivel?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByRelationAggregateInput
  }

  export type escolaridadWhereUniqueInput = Prisma.AtLeast<{
    id_escolaridad?: number
    AND?: escolaridadWhereInput | escolaridadWhereInput[]
    OR?: escolaridadWhereInput[]
    NOT?: escolaridadWhereInput | escolaridadWhereInput[]
    nivel?: StringNullableFilter<"escolaridad"> | string | null
    usuarios?: UsuariosListRelationFilter
  }, "id_escolaridad">

  export type escolaridadOrderByWithAggregationInput = {
    id_escolaridad?: SortOrder
    nivel?: SortOrderInput | SortOrder
    _count?: escolaridadCountOrderByAggregateInput
    _avg?: escolaridadAvgOrderByAggregateInput
    _max?: escolaridadMaxOrderByAggregateInput
    _min?: escolaridadMinOrderByAggregateInput
    _sum?: escolaridadSumOrderByAggregateInput
  }

  export type escolaridadScalarWhereWithAggregatesInput = {
    AND?: escolaridadScalarWhereWithAggregatesInput | escolaridadScalarWhereWithAggregatesInput[]
    OR?: escolaridadScalarWhereWithAggregatesInput[]
    NOT?: escolaridadScalarWhereWithAggregatesInput | escolaridadScalarWhereWithAggregatesInput[]
    id_escolaridad?: IntWithAggregatesFilter<"escolaridad"> | number
    nivel?: StringNullableWithAggregatesFilter<"escolaridad"> | string | null
  }

  export type habilidadesWhereInput = {
    AND?: habilidadesWhereInput | habilidadesWhereInput[]
    OR?: habilidadesWhereInput[]
    NOT?: habilidadesWhereInput | habilidadesWhereInput[]
    id_habilidad?: IntFilter<"habilidades"> | number
    habilidad?: StringNullableFilter<"habilidades"> | string | null
    usuario_habilidades?: Usuario_habilidadesListRelationFilter
  }

  export type habilidadesOrderByWithRelationInput = {
    id_habilidad?: SortOrder
    habilidad?: SortOrderInput | SortOrder
    usuario_habilidades?: usuario_habilidadesOrderByRelationAggregateInput
  }

  export type habilidadesWhereUniqueInput = Prisma.AtLeast<{
    id_habilidad?: number
    AND?: habilidadesWhereInput | habilidadesWhereInput[]
    OR?: habilidadesWhereInput[]
    NOT?: habilidadesWhereInput | habilidadesWhereInput[]
    habilidad?: StringNullableFilter<"habilidades"> | string | null
    usuario_habilidades?: Usuario_habilidadesListRelationFilter
  }, "id_habilidad">

  export type habilidadesOrderByWithAggregationInput = {
    id_habilidad?: SortOrder
    habilidad?: SortOrderInput | SortOrder
    _count?: habilidadesCountOrderByAggregateInput
    _avg?: habilidadesAvgOrderByAggregateInput
    _max?: habilidadesMaxOrderByAggregateInput
    _min?: habilidadesMinOrderByAggregateInput
    _sum?: habilidadesSumOrderByAggregateInput
  }

  export type habilidadesScalarWhereWithAggregatesInput = {
    AND?: habilidadesScalarWhereWithAggregatesInput | habilidadesScalarWhereWithAggregatesInput[]
    OR?: habilidadesScalarWhereWithAggregatesInput[]
    NOT?: habilidadesScalarWhereWithAggregatesInput | habilidadesScalarWhereWithAggregatesInput[]
    id_habilidad?: IntWithAggregatesFilter<"habilidades"> | number
    habilidad?: StringNullableWithAggregatesFilter<"habilidades"> | string | null
  }

  export type usuario_habilidadesWhereInput = {
    AND?: usuario_habilidadesWhereInput | usuario_habilidadesWhereInput[]
    OR?: usuario_habilidadesWhereInput[]
    NOT?: usuario_habilidadesWhereInput | usuario_habilidadesWhereInput[]
    id_usuario_habilidades?: IntFilter<"usuario_habilidades"> | number
    id_usuario?: IntNullableFilter<"usuario_habilidades"> | number | null
    id_habilidad?: IntNullableFilter<"usuario_habilidades"> | number | null
    habilidades?: XOR<HabilidadesNullableRelationFilter, habilidadesWhereInput> | null
    usuarios?: XOR<UsuariosNullableRelationFilter, usuariosWhereInput> | null
  }

  export type usuario_habilidadesOrderByWithRelationInput = {
    id_usuario_habilidades?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    id_habilidad?: SortOrderInput | SortOrder
    habilidades?: habilidadesOrderByWithRelationInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type usuario_habilidadesWhereUniqueInput = Prisma.AtLeast<{
    id_usuario_habilidades?: number
    AND?: usuario_habilidadesWhereInput | usuario_habilidadesWhereInput[]
    OR?: usuario_habilidadesWhereInput[]
    NOT?: usuario_habilidadesWhereInput | usuario_habilidadesWhereInput[]
    id_usuario?: IntNullableFilter<"usuario_habilidades"> | number | null
    id_habilidad?: IntNullableFilter<"usuario_habilidades"> | number | null
    habilidades?: XOR<HabilidadesNullableRelationFilter, habilidadesWhereInput> | null
    usuarios?: XOR<UsuariosNullableRelationFilter, usuariosWhereInput> | null
  }, "id_usuario_habilidades">

  export type usuario_habilidadesOrderByWithAggregationInput = {
    id_usuario_habilidades?: SortOrder
    id_usuario?: SortOrderInput | SortOrder
    id_habilidad?: SortOrderInput | SortOrder
    _count?: usuario_habilidadesCountOrderByAggregateInput
    _avg?: usuario_habilidadesAvgOrderByAggregateInput
    _max?: usuario_habilidadesMaxOrderByAggregateInput
    _min?: usuario_habilidadesMinOrderByAggregateInput
    _sum?: usuario_habilidadesSumOrderByAggregateInput
  }

  export type usuario_habilidadesScalarWhereWithAggregatesInput = {
    AND?: usuario_habilidadesScalarWhereWithAggregatesInput | usuario_habilidadesScalarWhereWithAggregatesInput[]
    OR?: usuario_habilidadesScalarWhereWithAggregatesInput[]
    NOT?: usuario_habilidadesScalarWhereWithAggregatesInput | usuario_habilidadesScalarWhereWithAggregatesInput[]
    id_usuario_habilidades?: IntWithAggregatesFilter<"usuario_habilidades"> | number
    id_usuario?: IntNullableWithAggregatesFilter<"usuario_habilidades"> | number | null
    id_habilidad?: IntNullableWithAggregatesFilter<"usuario_habilidades"> | number | null
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    id_usuario?: IntFilter<"usuarios"> | number
    curp?: StringNullableFilter<"usuarios"> | string | null
    nombre?: StringNullableFilter<"usuarios"> | string | null
    apellidos?: StringNullableFilter<"usuarios"> | string | null
    direccion?: StringNullableFilter<"usuarios"> | string | null
    fecha_nacimiento?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    correo_electronico?: StringNullableFilter<"usuarios"> | string | null
    password?: StringNullableFilter<"usuarios"> | string | null
    id_escolaridad?: IntNullableFilter<"usuarios"> | number | null
    fotografia?: StringNullableFilter<"usuarios"> | string | null
    usuario_habilidades?: Usuario_habilidadesListRelationFilter
    escolaridad?: XOR<EscolaridadNullableRelationFilter, escolaridadWhereInput> | null
  }

  export type usuariosOrderByWithRelationInput = {
    id_usuario?: SortOrder
    curp?: SortOrderInput | SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrderInput | SortOrder
    correo_electronico?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    id_escolaridad?: SortOrderInput | SortOrder
    fotografia?: SortOrderInput | SortOrder
    usuario_habilidades?: usuario_habilidadesOrderByRelationAggregateInput
    escolaridad?: escolaridadOrderByWithRelationInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    curp?: StringNullableFilter<"usuarios"> | string | null
    nombre?: StringNullableFilter<"usuarios"> | string | null
    apellidos?: StringNullableFilter<"usuarios"> | string | null
    direccion?: StringNullableFilter<"usuarios"> | string | null
    fecha_nacimiento?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    correo_electronico?: StringNullableFilter<"usuarios"> | string | null
    password?: StringNullableFilter<"usuarios"> | string | null
    id_escolaridad?: IntNullableFilter<"usuarios"> | number | null
    fotografia?: StringNullableFilter<"usuarios"> | string | null
    usuario_habilidades?: Usuario_habilidadesListRelationFilter
    escolaridad?: XOR<EscolaridadNullableRelationFilter, escolaridadWhereInput> | null
  }, "id_usuario">

  export type usuariosOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    curp?: SortOrderInput | SortOrder
    nombre?: SortOrderInput | SortOrder
    apellidos?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrderInput | SortOrder
    correo_electronico?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    id_escolaridad?: SortOrderInput | SortOrder
    fotografia?: SortOrderInput | SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _avg?: usuariosAvgOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
    _sum?: usuariosSumOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"usuarios"> | number
    curp?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    nombre?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    apellidos?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    fecha_nacimiento?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
    correo_electronico?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    password?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    id_escolaridad?: IntNullableWithAggregatesFilter<"usuarios"> | number | null
    fotografia?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
  }

  export type escolaridadCreateInput = {
    nivel?: string | null
    usuarios?: usuariosCreateNestedManyWithoutEscolaridadInput
  }

  export type escolaridadUncheckedCreateInput = {
    id_escolaridad?: number
    nivel?: string | null
    usuarios?: usuariosUncheckedCreateNestedManyWithoutEscolaridadInput
  }

  export type escolaridadUpdateInput = {
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: usuariosUpdateManyWithoutEscolaridadNestedInput
  }

  export type escolaridadUncheckedUpdateInput = {
    id_escolaridad?: IntFieldUpdateOperationsInput | number
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: usuariosUncheckedUpdateManyWithoutEscolaridadNestedInput
  }

  export type escolaridadCreateManyInput = {
    id_escolaridad?: number
    nivel?: string | null
  }

  export type escolaridadUpdateManyMutationInput = {
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type escolaridadUncheckedUpdateManyInput = {
    id_escolaridad?: IntFieldUpdateOperationsInput | number
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type habilidadesCreateInput = {
    habilidad?: string | null
    usuario_habilidades?: usuario_habilidadesCreateNestedManyWithoutHabilidadesInput
  }

  export type habilidadesUncheckedCreateInput = {
    id_habilidad?: number
    habilidad?: string | null
    usuario_habilidades?: usuario_habilidadesUncheckedCreateNestedManyWithoutHabilidadesInput
  }

  export type habilidadesUpdateInput = {
    habilidad?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_habilidades?: usuario_habilidadesUpdateManyWithoutHabilidadesNestedInput
  }

  export type habilidadesUncheckedUpdateInput = {
    id_habilidad?: IntFieldUpdateOperationsInput | number
    habilidad?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_habilidades?: usuario_habilidadesUncheckedUpdateManyWithoutHabilidadesNestedInput
  }

  export type habilidadesCreateManyInput = {
    id_habilidad?: number
    habilidad?: string | null
  }

  export type habilidadesUpdateManyMutationInput = {
    habilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type habilidadesUncheckedUpdateManyInput = {
    id_habilidad?: IntFieldUpdateOperationsInput | number
    habilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuario_habilidadesCreateInput = {
    habilidades?: habilidadesCreateNestedOneWithoutUsuario_habilidadesInput
    usuarios?: usuariosCreateNestedOneWithoutUsuario_habilidadesInput
  }

  export type usuario_habilidadesUncheckedCreateInput = {
    id_usuario_habilidades?: number
    id_usuario?: number | null
    id_habilidad?: number | null
  }

  export type usuario_habilidadesUpdateInput = {
    habilidades?: habilidadesUpdateOneWithoutUsuario_habilidadesNestedInput
    usuarios?: usuariosUpdateOneWithoutUsuario_habilidadesNestedInput
  }

  export type usuario_habilidadesUncheckedUpdateInput = {
    id_usuario_habilidades?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    id_habilidad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuario_habilidadesCreateManyInput = {
    id_usuario_habilidades?: number
    id_usuario?: number | null
    id_habilidad?: number | null
  }

  export type usuario_habilidadesUpdateManyMutationInput = {

  }

  export type usuario_habilidadesUncheckedUpdateManyInput = {
    id_usuario_habilidades?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
    id_habilidad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuariosCreateInput = {
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    fotografia?: string | null
    usuario_habilidades?: usuario_habilidadesCreateNestedManyWithoutUsuariosInput
    escolaridad?: escolaridadCreateNestedOneWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateInput = {
    id_usuario?: number
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    id_escolaridad?: number | null
    fotografia?: string | null
    usuario_habilidades?: usuario_habilidadesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUpdateInput = {
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_habilidades?: usuario_habilidadesUpdateManyWithoutUsuariosNestedInput
    escolaridad?: escolaridadUpdateOneWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    id_escolaridad?: NullableIntFieldUpdateOperationsInput | number | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_habilidades?: usuario_habilidadesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateManyInput = {
    id_usuario?: number
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    id_escolaridad?: number | null
    fotografia?: string | null
  }

  export type usuariosUpdateManyMutationInput = {
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuariosUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    id_escolaridad?: NullableIntFieldUpdateOperationsInput | number | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UsuariosListRelationFilter = {
    every?: usuariosWhereInput
    some?: usuariosWhereInput
    none?: usuariosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type usuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type escolaridadCountOrderByAggregateInput = {
    id_escolaridad?: SortOrder
    nivel?: SortOrder
  }

  export type escolaridadAvgOrderByAggregateInput = {
    id_escolaridad?: SortOrder
  }

  export type escolaridadMaxOrderByAggregateInput = {
    id_escolaridad?: SortOrder
    nivel?: SortOrder
  }

  export type escolaridadMinOrderByAggregateInput = {
    id_escolaridad?: SortOrder
    nivel?: SortOrder
  }

  export type escolaridadSumOrderByAggregateInput = {
    id_escolaridad?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Usuario_habilidadesListRelationFilter = {
    every?: usuario_habilidadesWhereInput
    some?: usuario_habilidadesWhereInput
    none?: usuario_habilidadesWhereInput
  }

  export type usuario_habilidadesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type habilidadesCountOrderByAggregateInput = {
    id_habilidad?: SortOrder
    habilidad?: SortOrder
  }

  export type habilidadesAvgOrderByAggregateInput = {
    id_habilidad?: SortOrder
  }

  export type habilidadesMaxOrderByAggregateInput = {
    id_habilidad?: SortOrder
    habilidad?: SortOrder
  }

  export type habilidadesMinOrderByAggregateInput = {
    id_habilidad?: SortOrder
    habilidad?: SortOrder
  }

  export type habilidadesSumOrderByAggregateInput = {
    id_habilidad?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type HabilidadesNullableRelationFilter = {
    is?: habilidadesWhereInput | null
    isNot?: habilidadesWhereInput | null
  }

  export type UsuariosNullableRelationFilter = {
    is?: usuariosWhereInput | null
    isNot?: usuariosWhereInput | null
  }

  export type usuario_habilidadesCountOrderByAggregateInput = {
    id_usuario_habilidades?: SortOrder
    id_usuario?: SortOrder
    id_habilidad?: SortOrder
  }

  export type usuario_habilidadesAvgOrderByAggregateInput = {
    id_usuario_habilidades?: SortOrder
    id_usuario?: SortOrder
    id_habilidad?: SortOrder
  }

  export type usuario_habilidadesMaxOrderByAggregateInput = {
    id_usuario_habilidades?: SortOrder
    id_usuario?: SortOrder
    id_habilidad?: SortOrder
  }

  export type usuario_habilidadesMinOrderByAggregateInput = {
    id_usuario_habilidades?: SortOrder
    id_usuario?: SortOrder
    id_habilidad?: SortOrder
  }

  export type usuario_habilidadesSumOrderByAggregateInput = {
    id_usuario_habilidades?: SortOrder
    id_usuario?: SortOrder
    id_habilidad?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EscolaridadNullableRelationFilter = {
    is?: escolaridadWhereInput | null
    isNot?: escolaridadWhereInput | null
  }

  export type usuariosCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    curp?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    direccion?: SortOrder
    fecha_nacimiento?: SortOrder
    correo_electronico?: SortOrder
    password?: SortOrder
    id_escolaridad?: SortOrder
    fotografia?: SortOrder
  }

  export type usuariosAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_escolaridad?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    curp?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    direccion?: SortOrder
    fecha_nacimiento?: SortOrder
    correo_electronico?: SortOrder
    password?: SortOrder
    id_escolaridad?: SortOrder
    fotografia?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    curp?: SortOrder
    nombre?: SortOrder
    apellidos?: SortOrder
    direccion?: SortOrder
    fecha_nacimiento?: SortOrder
    correo_electronico?: SortOrder
    password?: SortOrder
    id_escolaridad?: SortOrder
    fotografia?: SortOrder
  }

  export type usuariosSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_escolaridad?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type usuariosCreateNestedManyWithoutEscolaridadInput = {
    create?: XOR<usuariosCreateWithoutEscolaridadInput, usuariosUncheckedCreateWithoutEscolaridadInput> | usuariosCreateWithoutEscolaridadInput[] | usuariosUncheckedCreateWithoutEscolaridadInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutEscolaridadInput | usuariosCreateOrConnectWithoutEscolaridadInput[]
    createMany?: usuariosCreateManyEscolaridadInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type usuariosUncheckedCreateNestedManyWithoutEscolaridadInput = {
    create?: XOR<usuariosCreateWithoutEscolaridadInput, usuariosUncheckedCreateWithoutEscolaridadInput> | usuariosCreateWithoutEscolaridadInput[] | usuariosUncheckedCreateWithoutEscolaridadInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutEscolaridadInput | usuariosCreateOrConnectWithoutEscolaridadInput[]
    createMany?: usuariosCreateManyEscolaridadInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type usuariosUpdateManyWithoutEscolaridadNestedInput = {
    create?: XOR<usuariosCreateWithoutEscolaridadInput, usuariosUncheckedCreateWithoutEscolaridadInput> | usuariosCreateWithoutEscolaridadInput[] | usuariosUncheckedCreateWithoutEscolaridadInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutEscolaridadInput | usuariosCreateOrConnectWithoutEscolaridadInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutEscolaridadInput | usuariosUpsertWithWhereUniqueWithoutEscolaridadInput[]
    createMany?: usuariosCreateManyEscolaridadInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutEscolaridadInput | usuariosUpdateWithWhereUniqueWithoutEscolaridadInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutEscolaridadInput | usuariosUpdateManyWithWhereWithoutEscolaridadInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usuariosUncheckedUpdateManyWithoutEscolaridadNestedInput = {
    create?: XOR<usuariosCreateWithoutEscolaridadInput, usuariosUncheckedCreateWithoutEscolaridadInput> | usuariosCreateWithoutEscolaridadInput[] | usuariosUncheckedCreateWithoutEscolaridadInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutEscolaridadInput | usuariosCreateOrConnectWithoutEscolaridadInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutEscolaridadInput | usuariosUpsertWithWhereUniqueWithoutEscolaridadInput[]
    createMany?: usuariosCreateManyEscolaridadInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutEscolaridadInput | usuariosUpdateWithWhereUniqueWithoutEscolaridadInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutEscolaridadInput | usuariosUpdateManyWithWhereWithoutEscolaridadInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type usuario_habilidadesCreateNestedManyWithoutHabilidadesInput = {
    create?: XOR<usuario_habilidadesCreateWithoutHabilidadesInput, usuario_habilidadesUncheckedCreateWithoutHabilidadesInput> | usuario_habilidadesCreateWithoutHabilidadesInput[] | usuario_habilidadesUncheckedCreateWithoutHabilidadesInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutHabilidadesInput | usuario_habilidadesCreateOrConnectWithoutHabilidadesInput[]
    createMany?: usuario_habilidadesCreateManyHabilidadesInputEnvelope
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
  }

  export type usuario_habilidadesUncheckedCreateNestedManyWithoutHabilidadesInput = {
    create?: XOR<usuario_habilidadesCreateWithoutHabilidadesInput, usuario_habilidadesUncheckedCreateWithoutHabilidadesInput> | usuario_habilidadesCreateWithoutHabilidadesInput[] | usuario_habilidadesUncheckedCreateWithoutHabilidadesInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutHabilidadesInput | usuario_habilidadesCreateOrConnectWithoutHabilidadesInput[]
    createMany?: usuario_habilidadesCreateManyHabilidadesInputEnvelope
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
  }

  export type usuario_habilidadesUpdateManyWithoutHabilidadesNestedInput = {
    create?: XOR<usuario_habilidadesCreateWithoutHabilidadesInput, usuario_habilidadesUncheckedCreateWithoutHabilidadesInput> | usuario_habilidadesCreateWithoutHabilidadesInput[] | usuario_habilidadesUncheckedCreateWithoutHabilidadesInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutHabilidadesInput | usuario_habilidadesCreateOrConnectWithoutHabilidadesInput[]
    upsert?: usuario_habilidadesUpsertWithWhereUniqueWithoutHabilidadesInput | usuario_habilidadesUpsertWithWhereUniqueWithoutHabilidadesInput[]
    createMany?: usuario_habilidadesCreateManyHabilidadesInputEnvelope
    set?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    disconnect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    delete?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    update?: usuario_habilidadesUpdateWithWhereUniqueWithoutHabilidadesInput | usuario_habilidadesUpdateWithWhereUniqueWithoutHabilidadesInput[]
    updateMany?: usuario_habilidadesUpdateManyWithWhereWithoutHabilidadesInput | usuario_habilidadesUpdateManyWithWhereWithoutHabilidadesInput[]
    deleteMany?: usuario_habilidadesScalarWhereInput | usuario_habilidadesScalarWhereInput[]
  }

  export type usuario_habilidadesUncheckedUpdateManyWithoutHabilidadesNestedInput = {
    create?: XOR<usuario_habilidadesCreateWithoutHabilidadesInput, usuario_habilidadesUncheckedCreateWithoutHabilidadesInput> | usuario_habilidadesCreateWithoutHabilidadesInput[] | usuario_habilidadesUncheckedCreateWithoutHabilidadesInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutHabilidadesInput | usuario_habilidadesCreateOrConnectWithoutHabilidadesInput[]
    upsert?: usuario_habilidadesUpsertWithWhereUniqueWithoutHabilidadesInput | usuario_habilidadesUpsertWithWhereUniqueWithoutHabilidadesInput[]
    createMany?: usuario_habilidadesCreateManyHabilidadesInputEnvelope
    set?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    disconnect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    delete?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    update?: usuario_habilidadesUpdateWithWhereUniqueWithoutHabilidadesInput | usuario_habilidadesUpdateWithWhereUniqueWithoutHabilidadesInput[]
    updateMany?: usuario_habilidadesUpdateManyWithWhereWithoutHabilidadesInput | usuario_habilidadesUpdateManyWithWhereWithoutHabilidadesInput[]
    deleteMany?: usuario_habilidadesScalarWhereInput | usuario_habilidadesScalarWhereInput[]
  }

  export type habilidadesCreateNestedOneWithoutUsuario_habilidadesInput = {
    create?: XOR<habilidadesCreateWithoutUsuario_habilidadesInput, habilidadesUncheckedCreateWithoutUsuario_habilidadesInput>
    connectOrCreate?: habilidadesCreateOrConnectWithoutUsuario_habilidadesInput
    connect?: habilidadesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutUsuario_habilidadesInput = {
    create?: XOR<usuariosCreateWithoutUsuario_habilidadesInput, usuariosUncheckedCreateWithoutUsuario_habilidadesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutUsuario_habilidadesInput
    connect?: usuariosWhereUniqueInput
  }

  export type habilidadesUpdateOneWithoutUsuario_habilidadesNestedInput = {
    create?: XOR<habilidadesCreateWithoutUsuario_habilidadesInput, habilidadesUncheckedCreateWithoutUsuario_habilidadesInput>
    connectOrCreate?: habilidadesCreateOrConnectWithoutUsuario_habilidadesInput
    upsert?: habilidadesUpsertWithoutUsuario_habilidadesInput
    disconnect?: habilidadesWhereInput | boolean
    delete?: habilidadesWhereInput | boolean
    connect?: habilidadesWhereUniqueInput
    update?: XOR<XOR<habilidadesUpdateToOneWithWhereWithoutUsuario_habilidadesInput, habilidadesUpdateWithoutUsuario_habilidadesInput>, habilidadesUncheckedUpdateWithoutUsuario_habilidadesInput>
  }

  export type usuariosUpdateOneWithoutUsuario_habilidadesNestedInput = {
    create?: XOR<usuariosCreateWithoutUsuario_habilidadesInput, usuariosUncheckedCreateWithoutUsuario_habilidadesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutUsuario_habilidadesInput
    upsert?: usuariosUpsertWithoutUsuario_habilidadesInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutUsuario_habilidadesInput, usuariosUpdateWithoutUsuario_habilidadesInput>, usuariosUncheckedUpdateWithoutUsuario_habilidadesInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usuario_habilidadesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<usuario_habilidadesCreateWithoutUsuariosInput, usuario_habilidadesUncheckedCreateWithoutUsuariosInput> | usuario_habilidadesCreateWithoutUsuariosInput[] | usuario_habilidadesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutUsuariosInput | usuario_habilidadesCreateOrConnectWithoutUsuariosInput[]
    createMany?: usuario_habilidadesCreateManyUsuariosInputEnvelope
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
  }

  export type escolaridadCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<escolaridadCreateWithoutUsuariosInput, escolaridadUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: escolaridadCreateOrConnectWithoutUsuariosInput
    connect?: escolaridadWhereUniqueInput
  }

  export type usuario_habilidadesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<usuario_habilidadesCreateWithoutUsuariosInput, usuario_habilidadesUncheckedCreateWithoutUsuariosInput> | usuario_habilidadesCreateWithoutUsuariosInput[] | usuario_habilidadesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutUsuariosInput | usuario_habilidadesCreateOrConnectWithoutUsuariosInput[]
    createMany?: usuario_habilidadesCreateManyUsuariosInputEnvelope
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type usuario_habilidadesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<usuario_habilidadesCreateWithoutUsuariosInput, usuario_habilidadesUncheckedCreateWithoutUsuariosInput> | usuario_habilidadesCreateWithoutUsuariosInput[] | usuario_habilidadesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutUsuariosInput | usuario_habilidadesCreateOrConnectWithoutUsuariosInput[]
    upsert?: usuario_habilidadesUpsertWithWhereUniqueWithoutUsuariosInput | usuario_habilidadesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: usuario_habilidadesCreateManyUsuariosInputEnvelope
    set?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    disconnect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    delete?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    update?: usuario_habilidadesUpdateWithWhereUniqueWithoutUsuariosInput | usuario_habilidadesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: usuario_habilidadesUpdateManyWithWhereWithoutUsuariosInput | usuario_habilidadesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: usuario_habilidadesScalarWhereInput | usuario_habilidadesScalarWhereInput[]
  }

  export type escolaridadUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<escolaridadCreateWithoutUsuariosInput, escolaridadUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: escolaridadCreateOrConnectWithoutUsuariosInput
    upsert?: escolaridadUpsertWithoutUsuariosInput
    disconnect?: escolaridadWhereInput | boolean
    delete?: escolaridadWhereInput | boolean
    connect?: escolaridadWhereUniqueInput
    update?: XOR<XOR<escolaridadUpdateToOneWithWhereWithoutUsuariosInput, escolaridadUpdateWithoutUsuariosInput>, escolaridadUncheckedUpdateWithoutUsuariosInput>
  }

  export type usuario_habilidadesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<usuario_habilidadesCreateWithoutUsuariosInput, usuario_habilidadesUncheckedCreateWithoutUsuariosInput> | usuario_habilidadesCreateWithoutUsuariosInput[] | usuario_habilidadesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: usuario_habilidadesCreateOrConnectWithoutUsuariosInput | usuario_habilidadesCreateOrConnectWithoutUsuariosInput[]
    upsert?: usuario_habilidadesUpsertWithWhereUniqueWithoutUsuariosInput | usuario_habilidadesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: usuario_habilidadesCreateManyUsuariosInputEnvelope
    set?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    disconnect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    delete?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    connect?: usuario_habilidadesWhereUniqueInput | usuario_habilidadesWhereUniqueInput[]
    update?: usuario_habilidadesUpdateWithWhereUniqueWithoutUsuariosInput | usuario_habilidadesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: usuario_habilidadesUpdateManyWithWhereWithoutUsuariosInput | usuario_habilidadesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: usuario_habilidadesScalarWhereInput | usuario_habilidadesScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type usuariosCreateWithoutEscolaridadInput = {
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    fotografia?: string | null
    usuario_habilidades?: usuario_habilidadesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutEscolaridadInput = {
    id_usuario?: number
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    fotografia?: string | null
    usuario_habilidades?: usuario_habilidadesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutEscolaridadInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutEscolaridadInput, usuariosUncheckedCreateWithoutEscolaridadInput>
  }

  export type usuariosCreateManyEscolaridadInputEnvelope = {
    data: usuariosCreateManyEscolaridadInput | usuariosCreateManyEscolaridadInput[]
    skipDuplicates?: boolean
  }

  export type usuariosUpsertWithWhereUniqueWithoutEscolaridadInput = {
    where: usuariosWhereUniqueInput
    update: XOR<usuariosUpdateWithoutEscolaridadInput, usuariosUncheckedUpdateWithoutEscolaridadInput>
    create: XOR<usuariosCreateWithoutEscolaridadInput, usuariosUncheckedCreateWithoutEscolaridadInput>
  }

  export type usuariosUpdateWithWhereUniqueWithoutEscolaridadInput = {
    where: usuariosWhereUniqueInput
    data: XOR<usuariosUpdateWithoutEscolaridadInput, usuariosUncheckedUpdateWithoutEscolaridadInput>
  }

  export type usuariosUpdateManyWithWhereWithoutEscolaridadInput = {
    where: usuariosScalarWhereInput
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyWithoutEscolaridadInput>
  }

  export type usuariosScalarWhereInput = {
    AND?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
    OR?: usuariosScalarWhereInput[]
    NOT?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
    id_usuario?: IntFilter<"usuarios"> | number
    curp?: StringNullableFilter<"usuarios"> | string | null
    nombre?: StringNullableFilter<"usuarios"> | string | null
    apellidos?: StringNullableFilter<"usuarios"> | string | null
    direccion?: StringNullableFilter<"usuarios"> | string | null
    fecha_nacimiento?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    correo_electronico?: StringNullableFilter<"usuarios"> | string | null
    password?: StringNullableFilter<"usuarios"> | string | null
    id_escolaridad?: IntNullableFilter<"usuarios"> | number | null
    fotografia?: StringNullableFilter<"usuarios"> | string | null
  }

  export type usuario_habilidadesCreateWithoutHabilidadesInput = {
    usuarios?: usuariosCreateNestedOneWithoutUsuario_habilidadesInput
  }

  export type usuario_habilidadesUncheckedCreateWithoutHabilidadesInput = {
    id_usuario_habilidades?: number
    id_usuario?: number | null
  }

  export type usuario_habilidadesCreateOrConnectWithoutHabilidadesInput = {
    where: usuario_habilidadesWhereUniqueInput
    create: XOR<usuario_habilidadesCreateWithoutHabilidadesInput, usuario_habilidadesUncheckedCreateWithoutHabilidadesInput>
  }

  export type usuario_habilidadesCreateManyHabilidadesInputEnvelope = {
    data: usuario_habilidadesCreateManyHabilidadesInput | usuario_habilidadesCreateManyHabilidadesInput[]
    skipDuplicates?: boolean
  }

  export type usuario_habilidadesUpsertWithWhereUniqueWithoutHabilidadesInput = {
    where: usuario_habilidadesWhereUniqueInput
    update: XOR<usuario_habilidadesUpdateWithoutHabilidadesInput, usuario_habilidadesUncheckedUpdateWithoutHabilidadesInput>
    create: XOR<usuario_habilidadesCreateWithoutHabilidadesInput, usuario_habilidadesUncheckedCreateWithoutHabilidadesInput>
  }

  export type usuario_habilidadesUpdateWithWhereUniqueWithoutHabilidadesInput = {
    where: usuario_habilidadesWhereUniqueInput
    data: XOR<usuario_habilidadesUpdateWithoutHabilidadesInput, usuario_habilidadesUncheckedUpdateWithoutHabilidadesInput>
  }

  export type usuario_habilidadesUpdateManyWithWhereWithoutHabilidadesInput = {
    where: usuario_habilidadesScalarWhereInput
    data: XOR<usuario_habilidadesUpdateManyMutationInput, usuario_habilidadesUncheckedUpdateManyWithoutHabilidadesInput>
  }

  export type usuario_habilidadesScalarWhereInput = {
    AND?: usuario_habilidadesScalarWhereInput | usuario_habilidadesScalarWhereInput[]
    OR?: usuario_habilidadesScalarWhereInput[]
    NOT?: usuario_habilidadesScalarWhereInput | usuario_habilidadesScalarWhereInput[]
    id_usuario_habilidades?: IntFilter<"usuario_habilidades"> | number
    id_usuario?: IntNullableFilter<"usuario_habilidades"> | number | null
    id_habilidad?: IntNullableFilter<"usuario_habilidades"> | number | null
  }

  export type habilidadesCreateWithoutUsuario_habilidadesInput = {
    habilidad?: string | null
  }

  export type habilidadesUncheckedCreateWithoutUsuario_habilidadesInput = {
    id_habilidad?: number
    habilidad?: string | null
  }

  export type habilidadesCreateOrConnectWithoutUsuario_habilidadesInput = {
    where: habilidadesWhereUniqueInput
    create: XOR<habilidadesCreateWithoutUsuario_habilidadesInput, habilidadesUncheckedCreateWithoutUsuario_habilidadesInput>
  }

  export type usuariosCreateWithoutUsuario_habilidadesInput = {
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    fotografia?: string | null
    escolaridad?: escolaridadCreateNestedOneWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutUsuario_habilidadesInput = {
    id_usuario?: number
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    id_escolaridad?: number | null
    fotografia?: string | null
  }

  export type usuariosCreateOrConnectWithoutUsuario_habilidadesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutUsuario_habilidadesInput, usuariosUncheckedCreateWithoutUsuario_habilidadesInput>
  }

  export type habilidadesUpsertWithoutUsuario_habilidadesInput = {
    update: XOR<habilidadesUpdateWithoutUsuario_habilidadesInput, habilidadesUncheckedUpdateWithoutUsuario_habilidadesInput>
    create: XOR<habilidadesCreateWithoutUsuario_habilidadesInput, habilidadesUncheckedCreateWithoutUsuario_habilidadesInput>
    where?: habilidadesWhereInput
  }

  export type habilidadesUpdateToOneWithWhereWithoutUsuario_habilidadesInput = {
    where?: habilidadesWhereInput
    data: XOR<habilidadesUpdateWithoutUsuario_habilidadesInput, habilidadesUncheckedUpdateWithoutUsuario_habilidadesInput>
  }

  export type habilidadesUpdateWithoutUsuario_habilidadesInput = {
    habilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type habilidadesUncheckedUpdateWithoutUsuario_habilidadesInput = {
    id_habilidad?: IntFieldUpdateOperationsInput | number
    habilidad?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuariosUpsertWithoutUsuario_habilidadesInput = {
    update: XOR<usuariosUpdateWithoutUsuario_habilidadesInput, usuariosUncheckedUpdateWithoutUsuario_habilidadesInput>
    create: XOR<usuariosCreateWithoutUsuario_habilidadesInput, usuariosUncheckedCreateWithoutUsuario_habilidadesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutUsuario_habilidadesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutUsuario_habilidadesInput, usuariosUncheckedUpdateWithoutUsuario_habilidadesInput>
  }

  export type usuariosUpdateWithoutUsuario_habilidadesInput = {
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridad?: escolaridadUpdateOneWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutUsuario_habilidadesInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    id_escolaridad?: NullableIntFieldUpdateOperationsInput | number | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuario_habilidadesCreateWithoutUsuariosInput = {
    habilidades?: habilidadesCreateNestedOneWithoutUsuario_habilidadesInput
  }

  export type usuario_habilidadesUncheckedCreateWithoutUsuariosInput = {
    id_usuario_habilidades?: number
    id_habilidad?: number | null
  }

  export type usuario_habilidadesCreateOrConnectWithoutUsuariosInput = {
    where: usuario_habilidadesWhereUniqueInput
    create: XOR<usuario_habilidadesCreateWithoutUsuariosInput, usuario_habilidadesUncheckedCreateWithoutUsuariosInput>
  }

  export type usuario_habilidadesCreateManyUsuariosInputEnvelope = {
    data: usuario_habilidadesCreateManyUsuariosInput | usuario_habilidadesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type escolaridadCreateWithoutUsuariosInput = {
    nivel?: string | null
  }

  export type escolaridadUncheckedCreateWithoutUsuariosInput = {
    id_escolaridad?: number
    nivel?: string | null
  }

  export type escolaridadCreateOrConnectWithoutUsuariosInput = {
    where: escolaridadWhereUniqueInput
    create: XOR<escolaridadCreateWithoutUsuariosInput, escolaridadUncheckedCreateWithoutUsuariosInput>
  }

  export type usuario_habilidadesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: usuario_habilidadesWhereUniqueInput
    update: XOR<usuario_habilidadesUpdateWithoutUsuariosInput, usuario_habilidadesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<usuario_habilidadesCreateWithoutUsuariosInput, usuario_habilidadesUncheckedCreateWithoutUsuariosInput>
  }

  export type usuario_habilidadesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: usuario_habilidadesWhereUniqueInput
    data: XOR<usuario_habilidadesUpdateWithoutUsuariosInput, usuario_habilidadesUncheckedUpdateWithoutUsuariosInput>
  }

  export type usuario_habilidadesUpdateManyWithWhereWithoutUsuariosInput = {
    where: usuario_habilidadesScalarWhereInput
    data: XOR<usuario_habilidadesUpdateManyMutationInput, usuario_habilidadesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type escolaridadUpsertWithoutUsuariosInput = {
    update: XOR<escolaridadUpdateWithoutUsuariosInput, escolaridadUncheckedUpdateWithoutUsuariosInput>
    create: XOR<escolaridadCreateWithoutUsuariosInput, escolaridadUncheckedCreateWithoutUsuariosInput>
    where?: escolaridadWhereInput
  }

  export type escolaridadUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: escolaridadWhereInput
    data: XOR<escolaridadUpdateWithoutUsuariosInput, escolaridadUncheckedUpdateWithoutUsuariosInput>
  }

  export type escolaridadUpdateWithoutUsuariosInput = {
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type escolaridadUncheckedUpdateWithoutUsuariosInput = {
    id_escolaridad?: IntFieldUpdateOperationsInput | number
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuariosCreateManyEscolaridadInput = {
    id_usuario?: number
    curp?: string | null
    nombre?: string | null
    apellidos?: string | null
    direccion?: string | null
    fecha_nacimiento?: Date | string | null
    correo_electronico?: string | null
    password?: string | null
    fotografia?: string | null
  }

  export type usuariosUpdateWithoutEscolaridadInput = {
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_habilidades?: usuario_habilidadesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutEscolaridadInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
    usuario_habilidades?: usuario_habilidadesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateManyWithoutEscolaridadInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    curp?: NullableStringFieldUpdateOperationsInput | string | null
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellidos?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_nacimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    correo_electronico?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    fotografia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuario_habilidadesCreateManyHabilidadesInput = {
    id_usuario_habilidades?: number
    id_usuario?: number | null
  }

  export type usuario_habilidadesUpdateWithoutHabilidadesInput = {
    usuarios?: usuariosUpdateOneWithoutUsuario_habilidadesNestedInput
  }

  export type usuario_habilidadesUncheckedUpdateWithoutHabilidadesInput = {
    id_usuario_habilidades?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuario_habilidadesUncheckedUpdateManyWithoutHabilidadesInput = {
    id_usuario_habilidades?: IntFieldUpdateOperationsInput | number
    id_usuario?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuario_habilidadesCreateManyUsuariosInput = {
    id_usuario_habilidades?: number
    id_habilidad?: number | null
  }

  export type usuario_habilidadesUpdateWithoutUsuariosInput = {
    habilidades?: habilidadesUpdateOneWithoutUsuario_habilidadesNestedInput
  }

  export type usuario_habilidadesUncheckedUpdateWithoutUsuariosInput = {
    id_usuario_habilidades?: IntFieldUpdateOperationsInput | number
    id_habilidad?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuario_habilidadesUncheckedUpdateManyWithoutUsuariosInput = {
    id_usuario_habilidades?: IntFieldUpdateOperationsInput | number
    id_habilidad?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use EscolaridadCountOutputTypeDefaultArgs instead
     */
    export type EscolaridadCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EscolaridadCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HabilidadesCountOutputTypeDefaultArgs instead
     */
    export type HabilidadesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HabilidadesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuariosCountOutputTypeDefaultArgs instead
     */
    export type UsuariosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use escolaridadDefaultArgs instead
     */
    export type escolaridadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = escolaridadDefaultArgs<ExtArgs>
    /**
     * @deprecated Use habilidadesDefaultArgs instead
     */
    export type habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = habilidadesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usuario_habilidadesDefaultArgs instead
     */
    export type usuario_habilidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usuario_habilidadesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usuariosDefaultArgs instead
     */
    export type usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usuariosDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}